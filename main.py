v4Address = input("Please enter an IPv4 address WITHOUT the subnet mask or CIDR Mask: \n")

################################################################################################################################################
'''=================================================CONVERT DECIMAL TO BINARY================================================================'''

def toBinary(address):
    octets = address.split('.')
    binList = []
    for octet in octets:
        decimal = int(octet)
        binary = bin(decimal)
        friendly = binary.replace('0b', '')
        binList.append(friendly)
        binString = '.'.join(binList)
    return binString, binList

'''=================================================CONVERT DECIMAL TO BINARY================================================================'''
################################################################################################################################################
'''=================================================CONVERT BINARY TO DECIMAL================================================================'''

def getNetMask(binAddress):
    decValue = int(binAddress,2)
    return decValue

'''=================================================CONVERT BINARY TO DECIMAL================================================================'''
################################################################################################################################################
'''=================================================CONVERT NETMASK TO CIDR NOTATION========================================================='''

def getCIDR(netmask):
    count = 0
    if(len(netmask) == 35):
        for char in netmask:
            if char == "1":
                count += 1
        return f"/{count}"
    else:
        raise Exception("Invalid length! netmask should be 32 bits in length.")
    
'''=================================================CONVERT NETMASK TO CIDR NOTATION========================================================='''    
################################################################################################################################################
